jobs:
- job:
  displayName: Ubuntu
  pool:
    vmImage: ubuntu-latest
  variables:
    DISPLAY: ':99.0'
    PYVISTA_OFF_SCREEN: 'True'
  strategy:
    matrix:
      linux-Python38:
        python.version: '3.8'
      linux-Python39:
        python.version: '3.9'
      linux-Python310:
        python.version: '3.10'
      linux-Python311:
        python.version: '3.11'
  steps:

  - bash: |
      wget -O Mambaforge.sh  "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-$(uname)-$(uname -m).sh"
      bash Mambaforge.sh -b -p "${HOME}/conda"
    displayName: Install mamba

  - bash: |
      source "${HOME}/conda/etc/profile.d/conda.sh"
      source "${HOME}/conda/etc/profile.d/mamba.sh"
      echo "  - python="$(python.version) >> environment_test.yml
      mamba env create -f environment_test.yml
      conda activate discretize-test
      pip install pytest-azurepipelines
    displayName: Create Anaconda testing environment

  - bash: |
      source "${HOME}/conda/etc/profile.d/conda.sh"
      conda activate discretize-test
      pip install --no-build-isolation --editable .
    displayName: Install requirements and build
    condition: ne(variables['python.version'], '3.10')

  - bash: |
      source "${HOME}/conda/etc/profile.d/conda.sh"
      conda activate discretize-test
      .ci/setup_headless_display.sh
      pytest --ignore=tests/docs -W ignore::DeprecationWarning
    displayName: 'Testing'
    condition: ne(variables['python.version'], '3.10')

  - bash: |
      source "${HOME}/conda/etc/profile.d/conda.sh"
      conda activate discretize-test
      pip install --no-build-isolation --editable . --config-settings=setup-args="-Dcy_coverage=true"
    displayName: Install requirements and build for Testing
    condition: eq(variables['python.version'], '3.10')

  - bash: |
      source "${HOME}/conda/etc/profile.d/conda.sh"
      conda activate discretize-test
      .ci/setup_headless_display.sh
      coverage run -m pytest -s -v
      coverage xml
      coverage html
    displayName: 'Testing with coverage'
    condition: eq(variables['python.version'], '3.10')

  - bash: |
      curl -Os https://uploader.codecov.io/latest/linux/codecov
      chmod +x codecov
      ./codecov
    displayName: 'Upload coverage to codecov.io'
    condition: eq(variables['python.version'], '3.10')
